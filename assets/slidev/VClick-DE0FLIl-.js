import{d as v,N as _,L as x,b as C,o as k,F as z,C as B,h as a,e as I,Y as f,Z as V,E as $,_ as w}from"../modules/vue-BSBrl5ir.js";import{n as M,y as T,z as E,C as L}from"../index-BcIix11V.js";import{u as D}from"./context-BaQ9IJW8.js";const F=v({__name:"VClickGap",props:{size:{type:[String,Number],default:1}},setup(n){const l=n,{$clicksContext:i}=D(),t=M();let o=+l.size;return Number.isNaN(o)&&(console.warn(`[slidev] Invalid size for VClickGap: ${l.size}`),o=1),_(()=>{const p=i.currentOffset+o-1;i.register(t,{max:p,delta:o})}),x(()=>{i.unregister(t)}),(p,d)=>(k(),C(z))}}),g=["ul","ol"],G=v({props:{depth:{type:[Number,String],default:1},every:{type:[Number,String],default:1},at:{type:[Number,String],default:"+1"},hide:{type:Boolean,default:!1},fade:{type:Boolean,default:!1},handleSpecialElements:{type:Boolean,default:!0}},render(){const n=+this.every,l=T(this.at),i=typeof l=="string";let t=this.$slots.default?.();if(l==null||!t)return t;const o=B("click"),p=(s,e)=>$(s,[[o,e,"",{hide:this.hide,fade:this.fade}]]),d=s=>s.flatMap(e=>f(e)&&typeof e.type=="symbol"&&Array.isArray(e.children)?d(e.children):[e]);t=d(E(t));const S=(s,e=1)=>d(s).map(r=>{if(!f(r))return r;if(g.includes(r.type)&&Array.isArray(r.children)){const c=u(r.children,e+1);return a(r,{},c)}return a(r)});let A=1,h=0;const u=(s,e=1)=>d(s).map(r=>{if(!f(r)||r.type===V)return r;const c=+l+Math.ceil(A++/n)-1;let m;e<+this.depth&&Array.isArray(r.children)?m=a(r,{},S(r.children,e)):m=a(r);const N=c-h;return h=c,p(m,i?N>=0?`+${N}`:`${N}`:c)}),y=()=>I(F,{size:+l+Math.ceil((A-1)/n)-1-h});if(this.handleSpecialElements){if(t.length===1&&g.includes(t[0].type)&&Array.isArray(t[0].children))return a(t[0],{},[...u(t[0].children),y()]);if(t.length===1&&t[0].type==="table"){const s=t[0];if(Array.isArray(s.children))return a(s,{},s.children.map(e=>f(e)?e.type==="tbody"&&Array.isArray(e.children)?a(e,{},[...u(e.children),y()]):a(e):e))}}return[...u(t),y()]}}),U=v({props:{at:{type:[Number,String],default:"+1"},hide:{type:Boolean,default:!1},fade:{type:Boolean,default:!1},wrapText:{type:Function,default:n=>a("span",n)}},render(){return a(G,{every:L,at:this.at,hide:this.hide,fade:this.fade,handleSpecialElements:!1},{default:()=>this.$slots.default?.().map(n=>n.type===w?this.wrapText(n):n)})}});export{U as _};
